openapi: 3.0.1
info:
  title: Main Openapi Yaml
  version: 0.1.0
servers:
- url: "{server}:{port}/"
  variables:
    server:
      default: http://localhost
    port:
      default: "8080"
paths:
  /trainers:
    get:
      operationId: getTrainers
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /locations:
    get:
      operationId: getLocations
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /groups:
    get:
      operationId: getGroups
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /groups/categories:
    get:
      operationId: getGroupsCategories
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /departments:
    get:
      operationId: getDepartments
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /events:
    get:
      operationId: getEvents
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /members:
    get:
      operationId: getMembers
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      - name: crypt-key
        in: header
        required: true
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
          nullable: true
      - name: birthdateFrom
        in: query
        schema:
          type: string
          nullable: true
      - name: birthdateTo
        in: query
        schema:
          type: string
          nullable: true
      - name: resignationFrom
        in: query
        schema:
          type: string
          nullable: true
      - name: resignationTo
        in: query
        schema:
          type: string
          nullable: true
      - name: groupId
        in: query
        schema:
          type: string
          nullable: true
      - name: priceGroup
        in: query
        schema:
          type: string
          nullable: true
      - name: directDebitPayer
        in: query
        schema:
          type: boolean
          nullable: true
      - name: cashPayer
        in: query
        schema:
          type: boolean
          nullable: true
      - name: standingOrder
        in: query
        schema:
          type: boolean
          nullable: true
      - name: gender
        in: query
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      - name: member
        in: query
        schema:
          type: string
          nullable: true
      - name: active
        in: query
        schema:
          type: string
          nullable: true
      - name: mailRecipient
        in: query
        schema:
          type: string
          nullable: true
      - name: domestic
        in: query
        schema:
          type: string
          nullable: true
      - name: dunningLevel
        in: query
        schema:
          nullable: true
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
        "500":
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
    post:
      operationId: postMembers
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "501":
          description: NotImplemented
  /members/{id}:
    get:
      operationId: getMembersId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      - name: crypt-key
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
        "500":
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /members/{id}/picture:
    get:
      operationId: getMembersIdPicture
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      - name: crypt-key
        in: header
        required: true
        schema:
          type: string
      responses:
        "501":
          description: NotImplemented
  /documents:
    get:
      operationId: getDocuments
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /documents/lists:
    get:
      operationId: getDocumentsLists
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /prices:
    get:
      operationId: getPrices
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /prices/groups:
    get:
      operationId: getPricesGroups
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /calendars:
    get:
      operationId: getCalendars
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
  /calendars/trainings/canceled:
    get:
      operationId: getCalendarsTrainingsCanceled
      parameters:
      - name: call-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgvoMiddlewareResponse'
components:
  schemas:
    MgvoMiddlewareResponse:
      oneOf:
      - $ref: '#/components/schemas/MgvoResponse'
      - {}
    MgvoResponse:
      required:
      - call_id
      - headline
      - objname
      - rootname
      - verein
      - version
      type: object
      properties:
        rootname:
          type: string
        objname:
          type: string
        headline:
          type: string
          nullable: true
        call_id:
          type: string
        version:
          type: string
        verein:
          type: string
        objfieldlist:
          type: string
